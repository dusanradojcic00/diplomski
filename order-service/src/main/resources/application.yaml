server:
  servlet:
    context-path: /api
  port: 8081

spring:
  datasource:
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5433/order}
    username: ${POSTGRES_USER:met}
    password: ${POSTGRES_PASSWORD:met}
  jpa:
    hibernate:
      ddl-auto: validate
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
  flyway:
    baseline-on-migrate: true
    table: 'schema_history'
    validate-migration-naming: true
    out-of-order: true
  rabbitmq:
    host: localhost
    port: 5672
    username: met
    password: met

resilience4j:
  retry:
    instances:
      inventory:
        maxAttempts: 3
        waitDuration: 3s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException

  circuitbreaker:
    instances:
      inventory:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        minimumNumberOfCalls: 3
        failureRateThreshold: 20
        permittedNumberOfCallsInHalfOpenState: 5
        waitDurationInOpenState: 5s

